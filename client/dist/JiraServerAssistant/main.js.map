{"version":3,"sources":["./src/app/components/issue/issue.component.ts","./src/app/components/issue/issue.component.html","./src/app/HttpAuthInterceptor.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/worklog-form/worklog-form.component.ts","./src/app/components/worklog-form/worklog-form.component.html","./src/app/services/auth/auth.service.ts","./src/environments/environment.ts","./src/app/services/storage/storage.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/project-selection/project-selection.component.ts","./src/app/components/project-selection/project-selection.component.html","./src/app/app.module.ts","./src/app/services/issue/issue.service.ts","./src/app/components/statuses/statuses.component.ts","./src/app/components/statuses/statuses.component.html","./src/app/services/status/status.service.ts","./src/app/components/status/status.component.ts","./src/app/components/status/status.component.html","./src/app/components/pending/pending.component.ts","./src/app/components/pending/pending.component.html","./src/app/components/worklog/worklog.component.ts","./src/app/components/worklog/worklog.component.html","./src/app/services/project/project.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { IIssue, IssueService, ITransition } from '@app/services/issue/issue.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-issue',\n    templateUrl: './issue.component.html',\n    styleUrls: ['./issue.component.sass'],\n})\nexport class IssueComponent implements OnInit {\n    @Input() issue: IIssue;\n    @ViewChild('issueRef') issueRef;\n    public workLogHidden = true;\n    public workLogFormHidden = true;\n    public dropdownHidden = true;\n    public transitions$: Observable<ITransition[]>;\n    constructor(private readonly issueService: IssueService) {}\n    public ngOnInit() {\n        this.transitions$ = this.issueService.getTransitions(this.issue);\n    }\n\n    @HostListener('document:click', ['$event'])\n    public hideDropdown(event: any) {\n        if (this.dropdownHidden && this.issueRef.nativeElement.contains(event.target)) {\n            this.dropdownHidden = !this.dropdownHidden;\n        } else {\n            this.dropdownHidden = true;\n        }\n    }\n    public doTransition(transition: ITransition): void {\n        this.issueService.transition(transition, this.issue.id).subscribe();\n    }\n\n    public toggleWorkLog(): void {\n        this.workLogHidden = !this.workLogHidden\n    }\n\n    public toggleWorkLogForm(): void {\n        this.workLogFormHidden = !this.workLogFormHidden\n    }\n}\n","<div #issueRef>\n    <div class=\"card card-body\">\n        <p class=\"card-text truncate\">{{ issue.fields.summary }}</p>\n        <div class=\"d-flex justify-content-between\">\n            <img\n                *ngIf=\"issue.fields.assignee; else unassigned\"\n                class=\"rounded\"\n                [src]=\"issue.fields.assignee.avatarUrls['32x32']\"\n                [alt]=\"issue.fields.assignee.displayName\"\n            />\n            <ng-template #unassigned>\n                <img\n                    class=\"rounded\"\n                    src=\"https://img.icons8.com/pastel-glyph/2x/person-male--v2.png\"\n                    alt=\"Unassigned\"\n                />\n            </ng-template>\n            <img\n                *ngIf=\"issue.fields.priority\"\n                class=\"rounded mt-auto priority\"\n                [src]=\"issue.fields.priority.iconUrl\"\n                [alt]=\"issue.fields.priority.name\"\n            />\n        </div>\n    </div>\n    <div *ngIf=\"!dropdownHidden && transitions$ | async as transitions\" class=\"context-menu\">\n        <div class=\"list-group\">\n            <div\n                *ngFor=\"let transition of transitions\"\n                (click)=\"doTransition(transition)\"\n                class=\"list-group-item list-group-item-action\"\n            >\n                <span class=\"icon-login\"></span> {{ transition.to.name }}\n            </div>\n            <div (click)=\"toggleWorkLogForm()\" class=\"list-group-item list-group-item-action\">Log Work</div>\n            <div (click)=\"toggleWorkLog()\" class=\"list-group-item list-group-item-action\">Show Work Log</div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"!workLogHidden\">\n    <app-worklog [issue]=\"issue\" (close)=\"toggleWorkLog()\"></app-worklog>\n</div>\n<div *ngIf=\"!workLogFormHidden\">\n    <app-worklog-form [issue]=\"issue\" (close)=\"toggleWorkLogForm()\"></app-worklog-form>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './services/auth/auth.service';\r\n\r\n/** Inject With Credentials into the request */\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n    private isSignedIn = false;\r\n    constructor(private readonly authService: AuthService) {\r\n        this.authService.isSignedIn$.subscribe((isSignedIn) => (this.isSignedIn = isSignedIn));\r\n    }\r\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.isSignedIn) {\r\n            const req2 = req.clone({\r\n                withCredentials: true,\r\n                setHeaders: {\r\n                    'Set-Cookie': req.headers.get('Cookie') + this.authService.getCookieHeader(),\r\n                },\r\n            });\r\n\r\n            return next.handle(req2);\r\n        }\r\n        return next.handle(req);\r\n    }\r\n}\r\n","import { Component, HostListener, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { VM } from '@app/app.component';\nimport { ProjectService } from '@app/services/project/project.service';\nimport { StatusService } from '@app/services/status/status.service';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.sass'],\n})\nexport class HeaderComponent implements OnChanges {\n    @Input() vm: VM;\n    @ViewChild('titleRef') titleRef;\n    public dropdownHidden = true;\n    public selectedStatuses: string[];\n    constructor(\n        private readonly authService: AuthService,\n        private readonly statusService: StatusService,\n        private readonly projectService: ProjectService\n    ) {}\n    public ngOnChanges() {\n        this.selectedStatuses = this.vm.statuses.reduce((arr, cur) => {\n            if (cur.isSelected) {\n                arr.push(cur.name);\n            }\n            return arr;\n        }, []);\n    }\n    public signOut() {\n        this.authService.signOut();\n    }\n    public toggleStatuses() {\n        this.statusService.toggleStatusShown();\n    }\n    public deleteProject() {\n        this.projectService.deleteProject().subscribe();\n    }\n    public deleteUrl() {\n        this.authService.deleteUrl();\n    }\n    \n    @HostListener('document:click', ['$event'])\n    public hideDropdown(event: any) {\n        if (this.dropdownHidden && this.titleRef.nativeElement.contains(event.target)) {\n            this.dropdownHidden = !this.dropdownHidden;\n        } else {\n            this.dropdownHidden = true;\n        }\n    }\n}\n","<div class=\"bg-primary text-white mb-2\">\n    <div class=\"d-flex justify-content-between mx-3\">\n        <h1 #titleRef>JSA</h1>\n        <div class=\"ms-auto d-flex\">\n            <div class=\"my-auto\">\n                <span class=\"my-auto\" *ngIf=\"vm.url; else signIn\">{{\n                    vm.url\n                }}</span>\n                <span class=\"my-auto\" *ngIf=\"vm.isSignedIn && vm.selectedProject\">{{ vm.selectedProject.key }}</span>\n                <small\n                    class=\"ms-2 badge bg-secondary\"\n                    *ngIf=\"vm.isSignedIn && vm.selectedProject\"\n                    tabindex=\"0\"\n                    (click)=\"toggleStatuses()\"\n                    >status<span class=\"icon-down-open\"></span\n                ></small>\n            </div>\n            <ng-template #signIn>\n                <p class=\"my-auto\">Log in to use the app</p>\n            </ng-template>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"!dropdownHidden\" class=\"list-group\">\n    <button type=\"button\" *ngIf=\"vm.url\" (click)=\"deleteUrl()\" class=\"list-group-item list-group-item-action\">Change Url</button>\n    <button type=\"button\" *ngIf=\"vm.selectedProject\" (click)=\"deleteProject()\" class=\"list-group-item list-group-item-action\">Change Project</button>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { IIssue, IssueService } from \"@app/services/issue/issue.service\";\nimport { take } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-worklog-form',\n  templateUrl: './worklog-form.component.html',\n  styleUrls: ['./worklog-form.component.sass']\n})\nexport class WorklogFormComponent implements OnInit {\n  @Input() issue: IIssue;\n  @Output() close = new EventEmitter();\n  constructor(public readonly issueService: IssueService) { }\n  public workLogForm: FormGroup;\n  public get timeSpentControl() {\n      return this.workLogForm.get('timeSpent');\n  }\n  public get commentControl() {\n      return this.workLogForm.get('comment');\n  }\n\n  ngOnInit(): void {\n      this.workLogForm = new FormGroup({\n          timeSpent: new FormControl('', { validators: [Validators.required] }),\n          comment: new FormControl(''),\n      });\n  }\n\n  public submit() {\n    if(this.workLogForm.valid){\n      this.issueService.addWorkLog(this.issue.id, this.timeSpentControl.value, this.commentControl.value).pipe(take(1)).subscribe()\n      this.close.emit();\n    }\n  }\n}\n","<div class=\"jumbotron bg-light p-2\">\n    <div class=\"d-flex justify-content-between\">\n        <h5 class=\"modal-title\">{{ issue.fields.summary }}</h5>\n        <button type=\"button\" class=\"btn close\" (click)=\"close.emit()\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <form [formGroup]=\"workLogForm\">\n        <div class=\"form-group\">\n            <label>Time spent</label>\n            <input type=\"text\" class=\"form-control\" [ngClass]=\"timeSpentControl.invalid && timeSpentControl.touched ? 'is-invalid' : null\" [formControl]=\"timeSpentControl\" placeholder=\"1d 4h\">\n            <div class=\"invalid-feedback\">\n                Please add time spent to submit a work log.\n            </div>\n            <small *ngIf=\"!timeSpentControl.touched\" class=\"form-text text-muted\">Please format time spent as you would in Jira</small>\n            \n        </div>\n        <div class=\"form-group\">\n            <label>Comment</label>\n            <input type=\"text\" class=\"form-control\" [formControl]=\"commentControl\" placeholder=\"Feature completed\">\n        </div>\n        <button class=\"btn btn-primary\" (click)=\"submit()\">Submit</button>\n    </form>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport {\n    filter,\n    map,\n    switchMap,\n    switchMapTo,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { ICookie, StorageService } from '../storage/storage.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthService {\n    private url$$ = new BehaviorSubject<string>(null);\n    private sessionValue$$ = new BehaviorSubject<string>(null);\n    public isSignedIn$: Observable<boolean> = this.signInOnStart().pipe(\n        switchMapTo(this.sessionValue$$),\n        map((x) => !!x)\n    );\n    public url$: Observable<string> = this.url$$.asObservable();\n    private urlKey = '0b49dde5-f271-49ae-9bc3-f6454210d1e5';\n    private authUrl$ = this.url$$.pipe(\n        filter((x) => !!x),\n        map((x) => x + 'rest/auth/1/session')\n    );\n    constructor(\n        private readonly httpClient: HttpClient,\n        private readonly storageService: StorageService\n    ) {}\n\n    public checkAuthStatus(): Observable<boolean> {\n        return this.authUrl$.pipe(\n            switchMap((x: string) => {\n                if (!x) return of(null);\n                return this.httpClient.get(x);\n            }),\n            map((x) => !!x['session'])\n        );\n    }\n\n    public getJiraCredentials(url: string): Observable<void> {\n        if (!url) {\n            return of(null);\n        }\n        return this.storageService\n            .getCookie$({\n                name: 'JSESSIONID',\n                url: url,\n            })\n            .pipe(\n                take(1),\n                tap((x: ICookie) => {\n                    if (x) {\n                        this.url$$.next(url);\n                        this.sessionValue$$.next(x.value);\n                    }\n                }),\n                switchMap(() => this.storageService.setStorage$({ [this.urlKey]: url }))\n            );\n    }\n\n    public signOut(): Observable<any> {\n        return this.authUrl$.pipe(\n            switchMap((x: string) => this.httpClient.delete(x)),\n            take(1),\n            tap(() => {\n                this.sessionValue$$.next(null);\n            })\n        );\n    }\n\n    public deleteUrl() {\n        this.url$$.next(null);\n        this.sessionValue$$.next(null);\n    }\n\n    public getCookieHeader(): Observable<string> {\n        return this.sessionValue$$.pipe(\n            filter((x) => !!x),\n            map((x) => `JSESSIONID=${x}`)\n        );\n    }\n\n    private signInOnStart(): Observable<void> {\n        return this.storageService.getStorage$().pipe(\n            switchMap((x) => {\n                const url = x[this.urlKey];\n                if (!url) return of(null);\n                return this.getJiraCredentials(url);\n            })\n        );\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { from, Observable } from 'rxjs';\n\n// @ts-ignore\nconst browser = chrome;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageService {\n    public getStorage$(): Observable<{}> {\n        return from(\n            new Promise((resolve) => browser.storage.local.get((storage) => resolve(storage)))\n        );\n    }\n\n    public getCookie$(details): Observable<ICookie> {\n        return from(\n            new Promise<ICookie>((resolve) =>\n                browser.cookies.get(details, (cookie) => resolve(cookie))\n            )\n        );\n    }\n\n    public setStorage$(items: {}): Observable<void> {\n        return from(\n            new Promise<void>((resolve) => browser.storage.local.set(items, () => resolve()))\n        );\n    }\n\n    public deleteStorage$(keys: string[]): Observable<void> {\n        return from(\n            new Promise<void>((resolve) => browser.storage.local.remove(keys, () => resolve()))\n        );\n    }\n}\n\nexport interface ICookie {\n    name: string;\n    value: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { AuthService } from './services/auth/auth.service';\nimport { IIssueResponse, IssueService } from './services/issue/issue.service';\nimport { IProjectInfo, ProjectService } from './services/project/project.service';\nimport { IStatus, StatusService } from './services/status/status.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.sass'],\n})\nexport class AppComponent implements OnInit {\n    public vm$: Observable<VM>;\n    constructor(\n        private readonly authService: AuthService,\n        private readonly projectService: ProjectService,\n        private readonly statusService: StatusService,\n        private readonly issueService: IssueService\n    ) {}\n\n    public ngOnInit() {\n        this.vm$ = combineLatest([\n            this.authService.isSignedIn$.pipe(startWith(false)),\n            this.projectService.availableProjects$.pipe(startWith([])),\n            this.projectService.project$.pipe(startWith([null])),\n            this.authService.url$.pipe(startWith([null])),\n            this.statusService.statuses$.pipe(startWith([])),\n            this.statusService.statusesHidden$.pipe(startWith(false)),\n            this.issueService.issues$.pipe(startWith([])),\n        ]).pipe(\n            map(\n                ([\n                    isSignedIn,\n                    projects,\n                    selectedProject,\n                    url,\n                    statuses,\n                    statusesHidden,\n                    issues,\n                ]): VM => {\n                    const vm = {\n                        isSignedIn,\n                        projects,\n                        selectedProject,\n                        url,\n                        statuses,\n                        statusesHidden,\n                        issues,\n                    } as VM;\n                    vm.flowState = this.getFlowState(vm);\n                    return vm;\n                }\n            )\n        );\n    }\n\n    private getFlowState(vm: VM): FlowState {\n        if (!vm.isSignedIn) {\n            return FlowState.Login;\n        }\n        if (!vm.selectedProject) {\n            return FlowState.Project;\n        }\n        return FlowState.Issues;\n    }\n}\n\nenum FlowState {\n    Login = 'login',\n    Project = 'project',\n    Issues = 'issues',\n    Loading = 'loading',\n}\n\nexport interface VM {\n    isSignedIn: boolean;\n    projects: IProjectInfo[];\n    selectedProject: IProjectInfo;\n    url: string;\n    flowState: FlowState;\n    statuses: IStatus[];\n    statusesHidden: boolean;\n    issues: IIssueResponse[];\n}\n","<div *ngIf=\"vm$ | async as vm\">\n    <app-header [vm]=\"vm\"></app-header>\n    <div [ngSwitch]=\"vm.flowState\" class=\"mx-3 mb-3\">\n        <app-pending *ngSwitchCase=\"'loading'\"></app-pending>\n        <app-login *ngSwitchCase=\"'login'\"></app-login>\n        <app-project-selection *ngSwitchCase=\"'project'\" [vm]=\"vm\"></app-project-selection>\n        <div *ngSwitchCase=\"'issues'\">\n            <app-statuses *ngIf=\"!vm.statusesHidden\" [vm]=\"vm\"></app-statuses>\n            <app-status [vm]=\"vm\"></app-status>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { take } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.sass'],\n})\nexport class LoginComponent implements OnInit {\n    public loginForm: FormGroup;\n    constructor(private readonly authService: AuthService) {}\n\n    public get urlControl() {\n        return this.loginForm.get('url');\n    }\n\n    ngOnInit(): void {\n        this.loginForm = new FormGroup({\n            url: new FormControl('', { validators: [Validators.required] }),\n        });\n    }\n\n    public onSubmit(): void {\n        const url = `https://${this.urlControl.value}/`;\n        this.authService.getJiraCredentials(url).pipe(take(1)).subscribe();\n    }\n}\n","<h1 class=\"my-2\">Enter your Jira server website</h1>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"form-group\">\n    <div class=\"d-flex justify-content-left\">\n        <input\n            name=\"jiraUrl\"\n            type=\"url\"\n            class=\"form-control mb-3 me-2\"\n            placeholder=\"jira.example.com\"\n            formControlName=\"url\"\n            autocomplete=\"url\"\n            [ngClass]=\"{ 'is-invalid': urlControl.touched && urlControl.invalid }\"\n            required\n        />\n        <button class=\"btn btn-primary mb-3\">Submit</button>\n    </div>\n    <small class=\"help-text\">Please input the url starting after https:// and ending with the top level domain (e.g. \".com\", \".org\") </small>\n</form>\n","import { Component, EventEmitter, Input, Output, TrackByFunction } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { VM } from '@app/app.component';\nimport { IProjectInfo, ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n    selector: 'app-project-selection',\n    templateUrl: './project-selection.component.html',\n    styleUrls: ['./project-selection.component.sass'],\n})\nexport class ProjectSelectionComponent {\n    @Input() vm: VM;\n    public projectForm: FormGroup;\n    public get projectControl() {\n        return this.projectForm.get('projectControl');\n    }\n    constructor(private readonly projectService: ProjectService) {}\n    ngOnInit(): void {\n        this.projectForm = new FormGroup({\n            projectControl: new FormControl(),\n        });\n    }\n\n    public trackByProjectId: TrackByFunction<IProjectInfo> = (idx, item) => {\n        return item.id;\n    };\n\n    public submit(): void {\n        this.projectService.setProject(this.projectControl.value);\n    }\n}\n","<form [formGroup]=\"projectForm\" (submit)=\"submit()\">\n    <h2>Please select a project to work in</h2>\n    <div class=\"form-check mb-2\" *ngFor=\"let project of vm.projects; trackBy: trackByProjectId\">\n        <input\n            formControlName=\"projectControl\"\n            class=\"form-check-input\"\n            type=\"radio\"\n            [value]=\"project\"\n        />\n        <label class=\"form-check-label\" [for]=\"project.name\"\n            >{{ project.name }} / {{ project.key }}</label\n        >\n    </div>\n    <button class=\"btn btn-primary mb-3\">Submit</button>\n</form>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ProjectSelectionComponent } from './components/project-selection/project-selection.component';\nimport { HttpRequestInterceptor } from './HttpAuthInterceptor';\nimport { StatusesComponent } from './components/statuses/statuses.component';\nimport { PendingComponent } from './components/pending/pending.component';\nimport { IssueComponent } from './components/issue/issue.component';\nimport { StatusComponent } from './components/status/status.component';\nimport { WorklogComponent } from './components/worklog/worklog.component';\nimport { WorklogFormComponent } from './components/worklog-form/worklog-form.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HeaderComponent,\n        LoginComponent,\n        ProjectSelectionComponent,\n        StatusesComponent,\n        PendingComponent,\n        IssueComponent,\n        StatusComponent,\n        WorklogComponent,\n        WorklogFormComponent,\n    ],\n    imports: [BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule],\n    providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true }],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { Observable, forkJoin } from 'rxjs';\nimport { catchError, filter, map, mapTo, switchMap, take, tap } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport { ProjectService } from '../project/project.service';\nimport { StatusService } from '../status/status.service';\nimport { StorageService } from '../storage/storage.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class IssueService {\n    private refreshIssues$ = new BehaviorSubject(null);\n    private defaultFields = [Fields.Priority, Fields.Assignee, Fields.Summary];\n    constructor(\n        private readonly projectService: ProjectService,\n        private readonly authService: AuthService,\n        private readonly http: HttpClient,\n        private readonly storageService: StorageService,\n        private readonly statusService: StatusService\n    ) {}\n\n    private fieldsKey = '170227b0-01d8-4633-94d2-cb991d021393';\n    private url$: Observable<string> = this.authService.url$.pipe(\n        map((x) => x + 'rest/api/2/search')\n    );\n    private issueUrl$: Observable<string> = this.authService.url$.pipe(\n        filter(x => !!x),\n        map((x) => x + 'rest/api/2/issue/')\n    );\n\n    public fields$: Observable<string[]> = this.getFields();\n\n    public issues$: Observable<IIssueResponse[]> = combineLatest([\n        this.statusService.selectedStatuses$,\n        this.projectService.project$,\n        this.fields$,\n        this.url$,\n        this.refreshIssues$,\n    ]).pipe(\n        switchMap(([statuses, project, fields, url]) => {\n            const issues: Observable<IIssueResponse>[] = [];\n            for (let status of statuses) {\n                const res = this.http\n                    .post<IIssueResponse>(url, {\n                        startAt: 0,\n                        maxResults: 20,\n                        fields: fields,\n                        jql: `project = \"${project.name}\" AND status = \"${status}\" AND type != \"Epic\" order by lastViewed DESC`,\n                    } as ISearchRequest)\n                    .pipe(map((res: IIssueResponse) => ({ ...res, status: status })));\n                issues.push(res);\n            }\n            return forkJoin(issues);\n        }),\n        catchError(e => {\n            console.error(e);\n            return []\n        })\n    );\n\n    public getFields(): Observable<string[]> {\n        return this.storageService.getStorage$().pipe(\n            map((x) => {\n                return x[this.fieldsKey] ?? this.defaultFields;\n            })\n        );\n    }\n\n    public getTransitions(issue: IIssue): Observable<ITransition[]> {\n        return this.issueUrl$.pipe(\n            switchMap((url: string) => this.http.get(url + issue.id + '/transitions')),\n            map((x: { transitions: ITransition[] }) => x.transitions)\n        );\n    }\n\n    public transition(transition: ITransition, issueId: string): Observable<void> {\n        var request: ITransitionRequest = {\n            transition: {\n                id: transition.id,\n            },\n            fields:\n                transition.to.name === 'Closed' || transition.to.name === 'Done'\n                    ? {\n                          resolution: { name: transition.to.statusCategory.name },\n                      }\n                    : null,\n        };\n        return this.issueUrl$.pipe(\n            switchMap((url: string) =>\n                this.http.post<void>(url + issueId + '/transitions', request)\n            ),\n            take(1),\n            tap(this.refreshIssues)\n        );\n    }\n\n    public refreshIssues() {\n        this.refreshIssues$.next(null);\n    }\n\n    public getWorkLog(issueId: string): Observable<IWorkLog[]> {\n        return this.issueUrl$.pipe(\n            switchMap(url => this.http.get<IWorkLogResponse>(url+issueId+ \"/worklog\")),\n            map((x: IWorkLogResponse) => x.worklogs),\n        );\n    }\n\n    public addWorkLog(issueId: string, timeSpent: string = null, comment: string = null): Observable<null> {\n        const body: IWorkLogRequest = {\n            comment: comment,\n            timeSpent: timeSpent\n        }\n        return this.issueUrl$.pipe(\n            switchMap(url => this.http.post(url+issueId+ \"/worklog\", body)),\n            mapTo(null)\n        );\n    }\n}\n\ninterface IWorkLogRequest{\n    comment: string,\n    timeSpent: string;\n}\n\nexport interface IWorkLog {\n    author:{\n      name: string;\n      displayName: string;\n    },\n    comment: string;\n    updated: string;\n    started: string;\n    timeSpent: string;\n    timeSpentSeconds: number;\n}\n  \ninterface IWorkLogResponse {\n    worklogs: IWorkLog[];\n}\n  \n\ninterface ITransitionRequest {\n    transition: {\n        id: string;\n    };\n    fields: {\n        resolution: {\n            name: string;\n        };\n    };\n}\n\ninterface ISearchRequest {\n    jql: string;\n    startAt: number;\n    maxResults: number;\n    fields: string[];\n}\n\nexport interface IIssueResponse {\n    expand: string;\n    startAt: string;\n    maxResults: string;\n    total: number;\n    issues: IIssue[];\n    status: string;\n}\n\nexport interface ITransition {\n    id: string;\n    name: string;\n    to: {\n        statusColor: string;\n        description: string;\n        iconUrl: string;\n        name: string;\n        id: string;\n        statusCategory: {\n            id: string;\n            key: string;\n            colorName: string;\n            name: string;\n        };\n    };\n}\n\nexport interface IIssue {\n    expand: string;\n    id: string;\n    self: string;\n    key: string;\n    fields: {\n        [key: string]: any;\n    };\n    renderedFields: {\n        [key: string]: {};\n    };\n    transitions: ITransition[];\n}\nexport enum Fields {\n    Assignee = 'assignee',\n    Type = 'type',\n    Epic = 'EpicLink',\n    Labels = 'labels',\n    Components = 'components',\n    Priority = 'priority',\n    TShirtSize = 't-Shirt size',\n    Comments = 'comments',\n    DaysInProgress = 'days in progress',\n    AppDevStartTime = 'appdevstarttime',\n    AppQAStartTime = 'appqastarttime',\n    CapitalizationProjectName = 'capitalization project name',\n    CapitalizationDetermination = 'capitalization determination',\n    EpicName = 'epic name',\n    ExpectedImpact = 'expected impact',\n    LeadTimeStart = 'lead time - start',\n    LeadTimeEnd = 'lead time - end',\n    PairAsssignee = 'pair asssignee',\n    PairAssignee = 'pair assignee',\n    QaAssignee = 'qa assignee',\n    Sprint = 'sprint',\n    StarWarsSize = 'starwars size',\n    StoryPoints = 'story points',\n    SwarmEconomyWorkSource = 'swarm economy work source',\n    SwarmEconomyWorkType = 'swarm economy work type',\n    TimeSpent = 'time spent',\n    WebsiteReleaseType = 'website release type',\n    WorkObjectives = 'work objectives',\n    Summary = 'summary',\n}\n","import { Component, Input, OnDestroy, OnInit, TrackByFunction } from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { VM } from '@app/app.component';\nimport { IStatus, StatusService } from '@app/services/status/status.service';\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-statuses',\n    templateUrl: './statuses.component.html',\n    styleUrls: ['./statuses.component.sass'],\n})\nexport class StatusesComponent implements OnInit, OnDestroy {\n    @Input() vm: VM;\n    private changesSubscription: Subscription;\n    public statusForm: FormGroup;\n    public statusControls: { status: IStatus; control: FormControl }[];\n    constructor(private readonly statusService: StatusService) {}\n    public ngOnInit() {\n        this.statusControls = this.vm.statuses.map((x) => ({\n            status: x,\n            control: new FormControl(x.isSelected),\n        }));\n        this.statusForm = new FormGroup({\n            statusControls: new FormArray(this.statusControls.map((x) => x.control)),\n        });\n        this.changesSubscription = this.statusForm.valueChanges\n            .pipe(switchMap(() => this.setSelectedStatuses()))\n            .subscribe();\n    }\n\n    public ngOnDestroy() {\n        this.changesSubscription.unsubscribe();\n    }\n\n    public trackById: TrackByFunction<IStatus> = (idx, item) => {\n        return item.id;\n    };\n\n    private setSelectedStatuses(): Observable<void> {\n        const selected = this.statusControls\n            .filter((x) => !!x.control.value)\n            .map((x) => x.status.name);\n        return this.statusService.setSelectedStatuses(selected);\n    }\n}\n","<form [formGroup]=\"statusForm\">\n    <span *ngFor=\"let x of statusControls; trackById\" class=\"me-2 mb-2 badge bg-light text-dark\">\n        <input\n            [formControl]=\"x.control\"\n            type=\"checkbox\"\n            [name]=\"x.status.name\"\n            [value]=\"x\"\n            class=\"me-1\"\n        />\n        <label [for]=\"x.status.name\">{{ x.status.name }}</label>\n    </span>\n</form>\n","import { Injectable } from '@angular/core';\nimport flatten from 'lodash-es/flatten';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { tap, switchMapTo, map, startWith } from 'rxjs/operators';\nimport { ProjectService } from '../project/project.service';\nimport { StorageService } from '../storage/storage.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StatusService {\n    private statusesKey = '3dbefd70-db09-4d89-b815-c8153bc6f32a';\n    private selectedStatusesKey = 'cc67988d-57a3-4db8-b6fd-1aab3cffdb56';\n    private selectedStatuses$$: BehaviorSubject<string[]> = new BehaviorSubject([]);\n    private statusesHidden$$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n    public statusesHidden$: Observable<boolean> = this.statusesHidden$$.asObservable();\n    constructor(\n        private readonly storageService: StorageService,\n        private readonly projectService: ProjectService\n    ) {}\n    public selectedStatuses$: Observable<string[]> = this.getSelectedStatuses().pipe(\n        tap((x: string[]) => {\n            this.selectedStatuses$$.next(x);\n            if (x?.length > 0) {\n                this.statusesHidden$$.next(true);\n            }\n        }),\n        switchMapTo(this.selectedStatuses$$)\n    );\n\n    public statuses$: Observable<IStatus[]> = combineLatest([\n        this.projectService.issueTypes$,\n        this.selectedStatuses$,\n    ]).pipe(\n        map(([x , selected]) => {\n            const statusesDeep = x.map((issueType) => issueType.statuses);\n            const statusList = flatten(statusesDeep);\n            const statusDict: { [name: string]: IStatus } = {};\n            for (let status of statusList) {\n                if (!!statusDict[status.name]) continue;\n                status.isSelected = selected.includes(status.name);\n                statusDict[status.name] = status;\n            }\n            return Object.values(statusDict);\n        })\n    );\n\n    public getSelectedStatuses(): Observable<string[]> {\n        return this.storageService\n            .getStorage$()\n            .pipe(map((x) => x[this.selectedStatusesKey] ?? []));\n    }\n\n    public setStatuses(statuses: IStatus[]) {\n        this.storageService.setStorage$({ [this.statusesKey]: statuses });\n    }\n\n    public setSelectedStatuses(names: string[]) {\n        this.selectedStatuses$$.next(names);\n        return this.storageService.setStorage$({ [this.selectedStatusesKey]: names });\n    }\n\n    public toggleStatusShown(): void {\n        this.statusesHidden$$.next(!this.statusesHidden$$.value);\n    }\n\n    private getUniqueStatuses(issueTypes: IIssueType[]): IStatusesAndTypes {\n        const types = {};\n        const statuses: { [key: number]: IStatus } = {};\n        for (let issueType of issueTypes) {\n            if (types[issueType.name]) continue;\n            let type = {\n                name: issueType.name,\n                id: issueType.id,\n            };\n            types[issueType.name](type);\n\n            for (let status of issueType.statuses) {\n                if (statuses[status.name]) continue;\n                statuses[status.name] = status;\n            }\n        }\n        return { statuses, types };\n    }\n}\n\ninterface IStatusesAndTypes {\n    statuses: {\n        [name: string]: IStatus;\n    };\n    types: {\n        [name: string]: IType;\n    };\n}\ninterface IType {\n    name: string;\n    id: string;\n}\nexport interface IIssueType {\n    id: number;\n    name: string;\n    subtask: boolean;\n    statuses: IStatus[];\n}\nexport interface IStatus {\n    description: string;\n    iconUrl: string;\n    name: string;\n    id: number;\n    isSelected: boolean;\n}\n","import { Component, Input } from '@angular/core';\nimport { VM } from '@app/app.component';\n\n@Component({\n    selector: 'app-status',\n    templateUrl: './status.component.html',\n    styleUrls: ['./status.component.sass'],\n})\nexport class StatusComponent {\n    @Input() vm: VM;\n    constructor() {}\n}\n","<div class=\"row\">\n    <div class=\"col\" *ngFor=\"let col of vm.issues\">\n        <h2>{{ col.status }}</h2>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col\" *ngFor=\"let col of vm.issues\">\n        <app-issue *ngFor=\"let issue of col.issues\" [issue]=\"issue\"></app-issue>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pending',\n  templateUrl: './pending.component.html',\n  styleUrls: ['./pending.component.sass']\n})\nexport class PendingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex justify-content-center\">\n    <img src=\"https://acegif.com/wp-content/gif/dog-chasing-tail-19.gif\" alt=\"loading\" />\n</div>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { IIssue, IssueService, IWorkLog } from \"@app/services/issue/issue.service\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n  selector: 'app-worklog',\n  templateUrl: './worklog.component.html',\n  styleUrls: ['./worklog.component.sass']\n})\nexport class WorklogComponent implements OnInit {\n  public workLogs$: Observable<IWorkLog[]>\n  @Input() issue: IIssue;\n  @Output() close: EventEmitter<void> = new EventEmitter()\n  constructor(private readonly issueService: IssueService) { }\n\n  ngOnInit(): void {\n    this.workLogs$ = this.issueService.getWorkLog(this.issue.id);\n  }\n}\n","<div class=\"jumbotron bg-light p-2\">\n    <div class=\"d-flex justify-content-between\">\n        <h5 class=\"modal-title p-2\">{{ issue.fields.summary }}</h5>\n        <button type=\"button\" class=\"btn close\" (click)=\"close.emit()\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <ul *ngIf=\"workLogs$ | async as workLogs\" class=\"list-group\">\n        <li *ngFor=\"let entry of workLogs\" class=\"list-group-item\">\n            {{ entry.timeSpent }} {{ entry.comment }} {{ entry.author.name }}\n        </li>\n        <li *ngIf=\"!workLogs || workLogs.length < 1\" class=\"list-group-item\">No work logged.</li>\n    </ul>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { catchError, filter, map, switchMap, take } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport { IIssueType, } from '../status/status.service';\nimport { StorageService } from '../storage/storage.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProjectService {\n    private projectUrl$ = this.auth.url$.pipe(filter(x=> !!x), map((x) => x + 'rest/api/2/project'));\n    private projectBS: BehaviorSubject<IProjectInfo> = new BehaviorSubject(null);\n    private projectCookieKey = '6cbbfa32-e2f1-4694-861e-1edf3c9a1a2b';\n    public project$ = this.projectBS.asObservable();\n    public availableProjects$ = this.projectUrl$.pipe(\n        switchMap((x) => this.http.get<IProjectInfo[]>(x + '?recent=5')),\n        catchError(() => {\n            this.auth.deleteUrl();\n            console.error(\"User is either not signed into jira at the specified url or the url is not formatted correctly\");\n            return [];\n        })\n    );\n    public issueTypes$: Observable<IIssueType[]> = combineLatest([this.project$, this.projectUrl$]).pipe(\n        filter(([project, url]) => !!project?.key && !!url),\n        switchMap(([project, url]) => this.http.get<IIssueType[]>(`${url}/${project.key}/statuses`)),\n        catchError(e => {\n            console.error(e);\n            return [];\n        })\n    );\n\n    constructor(\n        private readonly http: HttpClient,\n        private readonly auth: AuthService,\n        private readonly storageService: StorageService\n    ) {\n        this.storageService\n            .getStorage$()\n            .pipe(take(1))\n            .subscribe((storage) => {\n                const x = storage[this.projectCookieKey];\n                if (x) {\n                    this.projectBS.next(JSON.parse(x));\n                }\n            });\n    }\n\n    public setProject(project: IProjectInfo): Observable<void> {\n        this.projectBS.next(project);\n        return this.storageService.setStorage$({\n            [this.projectCookieKey]: JSON.stringify(project),\n        });\n    }\n\n    public deleteProject(): Observable<void> {\n        this.projectBS.next(null);\n        return this.storageService.deleteStorage$([this.projectCookieKey]).pipe(take(1));\n    }\n}\n\nexport interface IProjectInfo {\n    url: string;\n    id: number;\n    key: string;\n    name: string;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}