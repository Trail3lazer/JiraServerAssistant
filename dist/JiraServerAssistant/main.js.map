{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/HttpAuthInterceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/main/main.component.ts","./src/app/components/main/main.component.html","./src/app/components/project-selection/project-selection.component.ts","./src/app/components/project-selection/project-selection.component.html","./src/app/services/auth/auth.service.ts","./src/app/services/project/project.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './services/auth/auth.service';\r\n\r\n/** Inject With Credentials into the request */\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n    private isSignedIn = false;\r\n    constructor(private readonly authService: AuthService) {\r\n        this.authService.isSignedIn$.subscribe((isSignedIn) => (this.isSignedIn = isSignedIn));\r\n    }\r\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.isSignedIn) {\r\n            const req2 = req.clone({\r\n                withCredentials: true,\r\n                setHeaders: {\r\n                    Cookie: req.headers.get('Cookie') + this.authService.getCookieHeader(),\r\n                },\r\n            });\r\n\r\n            return next.handle(req2);\r\n        }\r\n        return next.handle(req);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './services/auth/auth.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.sass'],\n})\nexport class AppComponent implements OnInit {\n    public isSignedIn$: Observable<boolean>;\n    constructor(private readonly authService: AuthService) {}\n    ngOnInit() {\n        this.isSignedIn$ = this.authService.isSignedIn$;\n    }\n}\n","<app-header></app-header>\n<div class=\"container\">\n    <app-main *ngIf=\"isSignedIn$ | async; else login\"></app-main>\n    <ng-template #login>\n        <app-login></app-login>\n    </ng-template>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { MainComponent } from './components/main/main.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ProjectSelectionComponent } from './components/project-selection/project-selection.component';\nimport { HttpRequestInterceptor } from './HttpAuthInterceptor';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HeaderComponent,\n        LoginComponent,\n        MainComponent,\n        ProjectSelectionComponent,\n    ],\n    imports: [BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule],\n    providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true }],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.sass'],\n})\nexport class HeaderComponent implements OnInit {\n    public isSignedIn$ = this.authService.isSignedIn$;\n    constructor(private readonly authService: AuthService) {}\n    ngOnInit(): void {}\n\n    public signOut() {\n        this.authService.signOut();\n    }\n}\n","<div class=\"container bg-primary text-white\">\n    <div class=\"row d-flex\">\n        <h1 class=\"col\">JSA</h1>\n        <div class=\"col my-auto text-right\">\n            <button *ngIf=\"isSignedIn$ | async; else login\" class=\"btn btn-outline-light\" (click)=\"signOut()\">\n                Sign Out\n            </button>\n            <ng-template #login>\n                <p>Log in to use the app</p>\n            </ng-template>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.sass'],\n})\nexport class LoginComponent implements OnInit {\n    public loginForm: FormGroup;\n    constructor(private readonly authService: AuthService) {}\n\n    public get usernameControl() {\n        return this.loginForm.get('username');\n    }\n    public get passwordControl() {\n        return this.loginForm.get('password');\n    }\n\n    ngOnInit(): void {\n        this.loginForm = new FormGroup({\n            username: new FormControl('', { validators: [Validators.required] }),\n            password: new FormControl('', { validators: [Validators.required] }),\n        });\n    }\n\n    public onSubmit() {\n        const username = this.usernameControl.value;\n        const password = this.passwordControl.value;\n        this.authService.signIn(username, password);\n    }\n}\n","<h1>Enter your Jira credentials</h1>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"form-group\">\n    <div class=\"row\">\n        <div class=\"form-group col-6 mb-2\">\n            <input\n                name=\"username\"\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Username\"\n                formControlName=\"username\"\n                autocomplete=\"username\"\n                [ngClass]=\"{ 'is-invalid': usernameControl.touched && usernameControl.invalid }\"\n                required\n            />\n        </div>\n        <div class=\"form-group col-6 mb-2\">\n            <input\n                name=\"password\"\n                type=\"password\"\n                class=\"form-control\"\n                placeholder=\"Password\"\n                formControlName=\"password\"\n                [ngClass]=\"{ 'is-invalid': passwordControl.touched && passwordControl.invalid }\"\n                autocomplete=\"current-password\"\n                required\n            />\n        </div>\n    </div>\n    <div class=\"text-center form-group mb-2\">\n        <button class=\"btn btn-primary col-6 mx-auto\">Submit</button>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.sass']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-project-selection></app-project-selection>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IProjectInfo, ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n    selector: 'app-project-selection',\n    templateUrl: './project-selection.component.html',\n    styleUrls: ['./project-selection.component.sass'],\n})\nexport class ProjectSelectionComponent implements OnInit {\n    public projects$: Observable<IProjectInfo[]>;\n    constructor(private readonly projectService: ProjectService) {}\n\n    ngOnInit(): void {\n        this.projects$ = this.projectService.getProjects();\n    }\n\n    public trackByProjectId(project: IProjectInfo) {\n        return project.id;\n    }\n}\n","<form *ngIf=\"projects$ | async as projects\">\n    <h2>Please select a project to work in</h2>\n    <div class=\"form-check pb-2\" *ngFor=\"let project of projects; trackBy: trackByProjectId\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"{{ project.name + project.id }}\" />\n        <label class=\"form-check-label\" for=\"{{ project.name + project.id }}\"\n            >{{ project.name }} / {{ project.key }}</label\n        >\n    </div>\n    <button class=\"btn btn-primary pb-2\"></button>\n</form>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { ILoginResponse } from './ILoginResponse';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthService {\n    private isSignedInBS = new BehaviorSubject(false);\n    public isSignedIn$: Observable<boolean> = this.isSignedInBS.asObservable();\n    private sessionName: string;\n    private sessionValue: string;\n    private sessionNameKey = '60d83deb-47d8-4f64-b02e-426d151cc3e6';\n    private authUrl = 'https://jira.1800contacts.com/rest/auth/1/session';\n    constructor(private readonly httpClient: HttpClient) {\n        this.sessionName = window.localStorage.getItem(this.sessionNameKey);\n        console.log(this.sessionName);\n        if (this.sessionName) {\n            this.sessionValue = window.localStorage.getItem(this.sessionName);\n            this.isSignedInBS.next(true);\n        }\n    }\n\n    public signIn(username: string, password: string) {\n        let requestHeaders = { headers: { ['content-type']: 'application/json' } };\n        this.httpClient\n            .post(this.authUrl, { username: username, password: password }, requestHeaders)\n            .pipe(take(1))\n            .subscribe((response: ILoginResponse) => {\n                console.log(response);\n                this.sessionName = response.session.name;\n                this.sessionValue = response.session.value;\n                window.localStorage.setItem(this.sessionNameKey, this.sessionName);\n                window.localStorage.setItem(this.sessionName, this.sessionValue);\n                this.isSignedInBS.next(true);\n            });\n    }\n\n    public signOut() {\n        const header = this.getCookieHeader();\n        this.httpClient\n            .delete(this.authUrl)\n            .pipe(take(1))\n            .subscribe((response) => {\n                console.log(response);\n                window.localStorage.removeItem(this.sessionName);\n                window.localStorage.removeItem(this.sessionNameKey);\n                this.sessionValue = undefined;\n                this.sessionName = undefined;\n                this.isSignedInBS.next(false);\n            });\n    }\n\n    public getCookieHeader(): string {\n        if (this.isSignedInBS.value) {\n            return `${this.sessionName}=${this.sessionValue}`;\n        }\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\n\nexport interface IProjectInfo {\n    url: string;\n    id: number;\n    key: string;\n    name: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProjectService {\n    private projectUrl = 'https://jira.1800contacts.com/rest/api/2/project';\n    private projectBS: BehaviorSubject<IProjectInfo> = new BehaviorSubject(null);\n    private projectCookieKey = '6cbbfa32-e2f1-4694-861e-1edf3c9a1a2b';\n    private projectInfo: IProjectInfo;\n    public project$ = this.projectBS.asObservable();\n    constructor(private readonly http: HttpClient, private readonly auth: AuthService) {\n        const jsonProject = window.localStorage.getItem(this.projectCookieKey);\n        if (jsonProject) {\n            this.projectInfo = JSON.parse(jsonProject);\n            this.projectBS.next(this.projectInfo);\n        }\n    }\n    public getProjects(): Observable<IProjectInfo[]> {\n        return this.http.get<IProjectInfo[]>(this.projectUrl + '?recent=5');\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}