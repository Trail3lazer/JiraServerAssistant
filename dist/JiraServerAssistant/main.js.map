{"version":3,"sources":["./src/app/HttpAuthInterceptor.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/services/auth/auth.service.ts","./src/environments/environment.ts","./src/app/services/storage/storage.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/project-selection/project-selection.component.ts","./src/app/components/project-selection/project-selection.component.html","./src/app/app.module.ts","./src/app/components/issues/issues.component.ts","./src/app/components/issues/issues.component.html","./src/app/services/project/project.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2C;;;AAM3C,+CAA+C;AAC/C;IAGI,gCAA6B,WAAwB;QAArD,iBAEC;QAF4B,gBAAW,GAAX,WAAW,CAAa;QAD7C,eAAU,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,UAAU,IAAK,QAAC,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC,EAA9B,CAA8B,CAAC,CAAC;IAC3F,CAAC;IACM,0CAAS,GAAhB,UAAiB,GAAqB,EAAE,IAAiB;QACrD,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC;gBACnB,eAAe,EAAE,IAAI;gBACrB,UAAU,EAAE;oBACR,YAAY,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;iBAC/E;aACJ,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC5B;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;gGAjBQ,sBAAsB;6GAAtB,sBAAsB,WAAtB,sBAAsB;iCARnC;CA0BC;AAlBkC;6FAAtB,sBAAsB;cADlC,wDAAU;;;;;;;;;;;;;;ACPX;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;ICKzC,0EAAkD;IAAA,uDAAY;IAAA,4DAAO;;;IAAnB,0DAAY;IAAZ,8EAAY;;;IAC9D,0EAAiD;IAAA,uDAA4B;IAAA,4DAAO;;;IAAnC,0DAA4B;IAA5B,8FAA4B;;;IAG7E,uEAAmB;IAAA,gFAAqB;IAAA,4DAAI;;ADN5D;IAOI,yBAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAClD,iCAAO,GAAd;QACI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;kFALQ,eAAe;mGAAf,eAAe;YCR5B,yEACI;YAAA,yEACI;YAAA,qEAAI;YAAA,8DAAG;YAAA,4DAAK;YACZ,yEACI;YAAA,yEACI;YAAA,6GAAkD;YAClD,6GAAiD;YACrD,4DAAM;YACN,uMACI;YAER,4DAAM;YACV,4DAAM;YACV,4DAAM;;;YARgC,0DAA2B;YAA3B,4EAA2B;YAC3B,0DAA0B;YAA1B,wFAA0B;;0BDNhE;CAcC;AAN2B;6FAAf,eAAe;cAL3B,uDAAS;eAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACzC;8HAEY,EAAE;kBAAV,mDAAK;;;;;;;;;;;;;;AERV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACgC;AAUnD;;;;AAGxB;IAgBI,qBACqB,UAAsB,EACtB,cAA8B;QAD9B,eAAU,GAAV,UAAU,CAAY;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAd3C,UAAK,GAAG,IAAI,oDAAe,CAAS,IAAI,CAAC,CAAC;QAC1C,mBAAc,GAAG,IAAI,oDAAe,CAAS,IAAI,CAAC,CAAC;QACpD,gBAAW,GAAwB,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAC/D,kEAAW,CAAC,IAAI,CAAC,cAAc,CAAC,EAChC,0DAAG,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAClB,CAAC;QACK,SAAI,GAAuB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,6DAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC,CAAC;QAC9D,WAAM,GAAG,sCAAsC,CAAC;QAChD,aAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAC9B,6DAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,CAAC,EAAH,CAAG,CAAC,EAClB,0DAAG,CAAC,UAAC,CAAC,IAAK,QAAC,GAAG,qBAAqB,EAAzB,CAAyB,CAAC,CACxC,CAAC;IAIC,CAAC;IAEG,qCAAe,GAAtB;QAAA,iBAQC;QAPG,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CACrB,gEAAS,CAAC,UAAC,CAAC;YACR,IAAI,CAAC,CAAC;gBAAE,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;YACxB,OAAO,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,EACF,0DAAG,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAd,CAAc,CAAC,CAC7B,CAAC;IACN,CAAC;IAEM,wCAAkB,GAAzB,UAA0B,GAAW;QAArC,iBAmBC;QAlBG,IAAI,CAAC,GAAG,EAAE;YACN,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;SACnB;QACD,OAAO,IAAI,CAAC,cAAc;aACrB,UAAU,CAAC;YACR,IAAI,EAAE,YAAY;YAClB,GAAG,EAAE,GAAG;SACX,CAAC;aACD,IAAI,CACD,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAG,CAAC,UAAC,CAAU;YACX,IAAI,CAAC,EAAE;gBACH,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;aACrC;QACL,CAAC,CAAC,EACF,gEAAS,CAAC;;YAAM,YAAI,CAAC,cAAc,CAAC,WAAW,WAAG,GAAC,KAAI,CAAC,MAAM,IAAG,GAAG,MAAG;QAAvD,CAAuD,CAAC,CAC3E,CAAC;IACV,CAAC;IAEM,6BAAO,GAAd;QAAA,iBAQC;QAPG,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CACrB,gEAAS,CAAC,UAAC,CAAC,IAAK,YAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAzB,CAAyB,CAAC,EAC3C,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAG,CAAC;YACA,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAEM,qCAAe,GAAtB;QACI,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAC3B,6DAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,CAAC,EAAH,CAAG,CAAC,EAClB,0DAAG,CAAC,UAAC,CAAC,IAAK,uBAAc,CAAG,EAAjB,CAAiB,CAAC,CAChC,CAAC;IACN,CAAC;IAEO,mCAAa,GAArB;QAAA,iBAQC;QAPG,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,IAAI,CACzC,gEAAS,CAAC,UAAC,CAAC;YACR,IAAM,GAAG,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC3B,IAAI,CAAC,GAAG;gBAAE,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;YAC1B,OAAO,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;QACxC,CAAC,CAAC,CACL,CAAC;IACN,CAAC;0EA1EQ,WAAW;kGAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;sBAhBtB;CA6FC;AA3EuB;6FAAX,WAAW;cAHvB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACjBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAA2C;AACH;;AAExC,aAAa;AACb,IAAM,OAAO,GAAG,MAAM,CAAC;AAEvB;IAAA;KA6BC;IAzBU,oCAAW,GAAlB;QACI,OAAO,iDAAI,CACP,IAAI,OAAO,CAAC,UAAC,OAAO,IAAK,cAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,OAAO,IAAK,cAAO,CAAC,OAAO,CAAC,EAAhB,CAAgB,CAAC,EAAxD,CAAwD,CAAC,CACrF,CAAC;IACN,CAAC;IAEM,mCAAU,GAAjB,UAAkB,OAAO;QACrB,OAAO,iDAAI,CACP,IAAI,OAAO,CAAU,UAAC,OAAO;YACzB,cAAO,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,UAAC,MAAM,IAAK,cAAO,CAAC,MAAM,CAAC,EAAf,CAAe,CAAC;QAAzD,CAAyD,CAC5D,CACJ,CAAC;IACN,CAAC;IAEM,oCAAW,GAAlB,UAAmB,KAAS;QACxB,OAAO,iDAAI,CACP,IAAI,OAAO,CAAO,UAAC,OAAO,IAAK,cAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,cAAM,cAAO,EAAE,EAAT,CAAS,CAAC,EAAjD,CAAiD,CAAC,CACpF,CAAC;IACN,CAAC;IAEM,uCAAc,GAArB,UAAsB,IAAc;QAChC,OAAO,iDAAI,CACP,IAAI,OAAO,CAAO,UAAC,OAAO,IAAK,cAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,cAAM,cAAO,EAAE,EAAT,CAAS,CAAC,EAAnD,CAAmD,CAAC,CACtF,CAAC;IACN,CAAC;gFAzBQ,cAAc;qGAAd,cAAc,WAAd,cAAc,mBAFX,MAAM;yBAPtB;CAmCC;AA1B0B;6FAAd,cAAc;cAH1B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;;;;;;;;;;ACR0D;AACV;AACI;;;;;ICC7C,uEAA+C;;;IAC/C,sFAAmF;;;IAAlC,qEAAS;;;IAC1D,2EAA4D;;;IAAvB,qEAAS;;;IALtD,wEACI;IAAA,2EAAmC;IACnC,yEACI;IAAA,mIAAmC;IACnC,2JAA2D;IAC3D,qIAA+C;IACnD,4DAAM;IACV,qEAAe;;;IANC,0DAAS;IAAT,qEAAS;IAChB,0DAAyB;IAAzB,qFAAyB;IACf,0DAAuB;IAAvB,iFAAuB;IACX,0DAAyB;IAAzB,mFAAyB;IACpC,0DAAwB;IAAxB,kFAAwB;;ADE5C;IAOI,sBACqB,WAAwB,EACxB,cAA8B;QAD9B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;IAChD,CAAC;IAEG,+BAAQ,GAAf;QAAA,iBAcC;QAbG,IAAI,CAAC,GAAG,GAAG,0DAAa,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,gEAAS,CAAC,KAAK,CAAC,CAAC;YACnD,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,gEAAS,CAAC,EAAE,CAAC,CAAC;YAC1D,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,CAAC;YAClD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,gEAAS,CAAC,EAAE,CAAC,CAAC;YACzC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,gEAAS,CAAC,EAAE,CAAC,CAAC;SAC3D,CAAC,CAAC,IAAI,CACH,0DAAG,CAAC,UAAC,EAAsD;gBAAtD,gEAAsD,EAArD,UAAU,UAAE,QAAQ,UAAE,eAAe,UAAE,GAAG,UAAE,QAAQ;YACtD,IAAM,EAAE,GAAG,EAAE,UAAU,cAAE,QAAQ,YAAE,eAAe,mBAAE,GAAG,OAAE,QAAQ,YAAQ,CAAC;YAC1E,EAAE,CAAC,SAAS,GAAG,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YACrC,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAEM,gCAAS,GAAhB;QACI,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IAC1C,CAAC;IAEO,mCAAY,GAApB,UAAqB,EAAM;QACvB,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE;YAChB,OAAO,SAAS,CAAC,KAAK,CAAC;SAC1B;QACD,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE;YACrB,OAAO,SAAS,CAAC,OAAO,CAAC;SAC5B;QACD,OAAO,SAAS,CAAC,MAAM,CAAC;IAC5B,CAAC;4EAnCQ,YAAY;gGAAZ,YAAY;YCZzB,0HACI;;;YADU,0IAAyB;;uBDAvC;CAgDC;AApCwB;6FAAZ,YAAY;cALxB,uDAAS;eAAC;gBACP,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACtC;;AAuCD,IAAK,SAIJ;AAJD,WAAK,SAAS;IACV,4BAAe;IACf,gCAAmB;IACnB,8BAAiB;AACrB,CAAC,EAJI,SAAS,KAAT,SAAS,QAIb;;;;;;;;;;;;;AEtDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAE9B;;;;;;AAGtC;IAOI,wBAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEzD,sBAAW,sCAAU;aAArB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC;;;OAAA;IAED,iCAAQ,GAAR;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC3B,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;SAClE,CAAC,CAAC;IACP,CAAC;IAEM,iCAAQ,GAAf;QACI,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACvE,CAAC;gFAjBQ,cAAc;kGAAd,cAAc;YCX3B,wEAAiB;YAAA,yFAA8B;YAAA,4DAAK;YACpD,0EACI;YAD0B,0IAAY,cAAU,IAAC;YACjD,yEACI;YAAA,sEAUA;YAAA,4EAAqC;YAAA,iEAAM;YAAA,4DAAS;YACxD,4DAAM;YACV,4DAAO;;YAdD,0DAAuB;YAAvB,oFAAuB;YASjB,0DAAsE;YAAtE,4LAAsE;;yBDVlF;CA6BC;AAlB0B;6FAAd,cAAc;cAL1B,uDAAS;eAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACxC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwF;AAChC;;;;;;ICCpD,yEACI;IAAA,sEAMA;IAAA,2EACK;IAAA,uDAAsC;IAAA,4DAC1C;IACL,4DAAM;;;IALE,0DAAiB;IAAjB,6EAAiB;IAEW,0DAAoB;IAApB,gFAAoB;IAC/C,0DAAsC;IAAtC,gHAAsC;;ADLnD;IAWI,mCAA6B,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAOpD,qBAAgB,GAAkC,UAAC,GAAG,EAAE,IAAI;YAC/D,OAAO,IAAI,CAAC,EAAE,CAAC;QACnB,CAAC,CAAC;IAT4D,CAAC;IAH/D,sBAAW,qDAAc;aAAzB;YACI,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAClD,CAAC;;;OAAA;IAED,4CAAQ,GAAR;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC7B,cAAc,EAAE,IAAI,0DAAW,EAAE;SACpC,CAAC,CAAC;IACP,CAAC;IAMM,0CAAM,GAAb,UAAc,KAAU;QACpB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC9D,CAAC;sGApBQ,yBAAyB;6GAAzB,yBAAyB;YCVtC,0EACI;YAD4B,uJAAU,kBAAc,IAAC;YACrD,qEAAI;YAAA,6FAAkC;YAAA,4DAAK;YAC3C,qHACI;YAUJ,4EAAqC;YAAA,iEAAM;YAAA,4DAAS;YACxD,4DAAO;;YAdD,sFAAyB;YAEE,0DAA8D;YAA9D,oFAA8D;;oCDF/F;CA+BC;AArBqC;6FAAzB,yBAAyB;cALrC,uDAAS;eAAC;gBACP,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aACpD;uIAEY,EAAE;kBAAV,mDAAK;;;;;;;;;;;;;;AEXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACwB;AACH;AACO;AACT;AACqC;AACxC;AACQ;;;;AAEvE;IAAA;KAMyB;4FAAZ,SAAS,cAFN,2DAAY;gJAEf,SAAS,mBAHP,CAAC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,2EAAsB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,YADjF,CAAC,uEAAa,EAAE,qEAAgB,EAAE,0DAAW,EAAE,kEAAmB,CAAC;oBAdhF;CAkByB;AAAH;mIAAT,SAAS,mBALH,2DAAY,EAAE,mFAAe,EAAE,gFAAc,EAAE,mHAAyB,EAAE,mFAAe,aAC9F,uEAAa,EAAE,qEAAgB,EAAE,0DAAW,EAAE,kEAAmB;6FAIlE,SAAS;cANrB,sDAAQ;eAAC;gBACN,YAAY,EAAE,CAAC,2DAAY,EAAE,mFAAe,EAAE,gFAAc,EAAE,mHAAyB,EAAE,mFAAe,CAAC;gBACzG,OAAO,EAAE,CAAC,uEAAa,EAAE,qEAAgB,EAAE,0DAAW,EAAE,kEAAmB,CAAC;gBAC5E,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,2EAAsB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;gBAC1F,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC5B;;kEAJkB,2DAAY,6DAAE,+0EAAd,2DAAY,EAAE,mFAAe,EAAE,gFAAc,EAAE,mHAAyB,EAAE,mFAAe;;;;;;;;;;;;;ACb5G;AAAA;AAAA;AAAA;AAAyD;;;AAGzD;IAOI;IAAe,CAAC;kFAFP,eAAe;mGAAf,eAAe;YCR5B,uDACA;;;YADA,4JACA;;0BDDA;CAWC;AAH2B;6FAAf,eAAe;cAL3B,uDAAS;eAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACzC;sCAEY,EAAE;kBAAV,mDAAK;;;;;;;;;;;;;;;;;;;;;;;;AERiC;AACM;AACV;AACuB;;;;;AAK9D;IAgBI,wBACqB,IAAgB,EAChB,IAAiB,EACjB,cAA8B;QAHnD,iBAcC;QAboB,SAAI,GAAJ,IAAI,CAAY;QAChB,SAAI,GAAJ,IAAI,CAAa;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAf3C,gBAAW,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,CAAC,IAAK,QAAC,GAAG,oBAAoB,EAAxB,CAAwB,CAAC,CAAC,CAAC;QACxE,cAAS,GAAkC,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QACrE,qBAAgB,GAAG,sCAAsC,CAAC;QAC3D,aAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QACzC,uBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAC7C,gEAAS,CAAC,UAAC,CAAC,IAAK,YAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,CAAC,GAAG,WAAW,CAAC,EAA9C,CAA8C,CAAC,CACnE,CAAC;QACK,qBAAgB,GAAG,0DAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAC3E,6DAAM,CAAC,UAAC,EAAc;gBAAd,gEAAc,EAAb,OAAO,UAAE,GAAG;YAAM,QAAC,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,GAAG,KAAI,CAAC,CAAC,GAAG;QAAvB,CAAuB,CAAC,EACnD,gEAAS,CAAC,UAAC,EAAc;gBAAd,gEAAc,EAAb,OAAO,UAAE,GAAG;YAAM,YAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,SAAI,OAAO,CAAC,GAAG,cAAW,CAAC;QAA7D,CAA6D,CAAC,CAC/F,CAAC;QAOE,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc;aAClC,WAAW,EAAE;aACb,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,UAAC,OAAO;YACf,IAAM,CAAC,GAAG,OAAO,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;YACzC,IAAI,CAAC,EAAE;gBACH,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,mCAAU,GAAjB,UAAkB,OAAqB;;QACnC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW;YAClC,GAAC,IAAI,CAAC,gBAAgB,IAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;gBAClD,CAAC;IACP,CAAC;IAEM,sCAAa,GAApB;QACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACvE,CAAC;gFAvCQ,cAAc;qGAAd,cAAc,WAAd,cAAc,mBAFX,MAAM;yBAVtB;CAoDC;AAxC0B;6FAAd,cAAc;cAH1B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IACxB,oEAAc,EAAE,CAAC;CACpB;AAED,2EAAwB,gBACJ,CAAC,0DAAU;KAC1B,KAAK,CAAC,UAAC,GAAG,IAAK,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;ACZxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './services/auth/auth.service';\r\n\r\n/** Inject With Credentials into the request */\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n    private isSignedIn = false;\r\n    constructor(private readonly authService: AuthService) {\r\n        this.authService.isSignedIn$.subscribe((isSignedIn) => (this.isSignedIn = isSignedIn));\r\n    }\r\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.isSignedIn) {\r\n            const req2 = req.clone({\r\n                withCredentials: true,\r\n                setHeaders: {\r\n                    'Set-Cookie': req.headers.get('Cookie') + this.authService.getCookieHeader(),\r\n                },\r\n            });\r\n\r\n            return next.handle(req2);\r\n        }\r\n        return next.handle(req);\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.sass'],\n})\nexport class HeaderComponent {\n    @Input() vm;\n    constructor(private readonly authService: AuthService) {}\n    public signOut() {\n        this.authService.signOut();\n    }\n}\n","<div class=\"container bg-primary text-white mb-2\">\n    <div class=\"d-flex justify-content-between\">\n        <h1>JSA</h1>\n        <div class=\"ms-auto d-flex\">\n            <div class=\"my-auto\">\n                <span class=\"my-auto\" *ngIf=\"vm.url; else signIn\">{{ vm.url }}</span>\n                <span class=\"my-auto\" *ngIf=\"vm.selectedProject\">{{ vm.selectedProject.key }}</span>\n            </div>\n            <ng-template #signIn>\n                <p class=\"my-auto\">Log in to use the app</p>\n            </ng-template>\n        </div>\n    </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, bindCallback, from, Observable, of } from 'rxjs';\nimport {\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    switchMapTo,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { ICookie, StorageService } from '../storage/storage.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthService {\n    private url$$ = new BehaviorSubject<string>(null);\n    private sessionValue$$ = new BehaviorSubject<string>(null);\n    public isSignedIn$: Observable<boolean> = this.signInOnStart().pipe(\n        switchMapTo(this.sessionValue$$),\n        map((x) => !!x)\n    );\n    public url$: Observable<string> = this.url$$.pipe(filter((x) => !!x));\n    private urlKey = '0b49dde5-f271-49ae-9bc3-f6454210d1e5';\n    private authUrl$ = this.url$$.pipe(\n        filter((x) => !!x),\n        map((x) => x + 'rest/auth/1/session')\n    );\n    constructor(\n        private readonly httpClient: HttpClient,\n        private readonly storageService: StorageService\n    ) {}\n\n    public checkAuthStatus(): Observable<boolean> {\n        return this.authUrl$.pipe(\n            switchMap((x) => {\n                if (!x) return of(null);\n                return this.httpClient.get(x);\n            }),\n            map((x) => !!x['session'])\n        );\n    }\n\n    public getJiraCredentials(url: string): Observable<void> {\n        if (!url) {\n            return of(null);\n        }\n        return this.storageService\n            .getCookie$({\n                name: 'JSESSIONID',\n                url: url,\n            })\n            .pipe(\n                take(1),\n                tap((x: ICookie) => {\n                    if (x) {\n                        this.url$$.next(url);\n                        this.sessionValue$$.next(x.value);\n                    }\n                }),\n                switchMap(() => this.storageService.setStorage$({ [this.urlKey]: url }))\n            );\n    }\n\n    public signOut(): Observable<any> {\n        return this.authUrl$.pipe(\n            switchMap((x) => this.httpClient.delete(x)),\n            take(1),\n            tap(() => {\n                this.sessionValue$$.next(null);\n            })\n        );\n    }\n\n    public getCookieHeader(): Observable<string> {\n        return this.sessionValue$$.pipe(\n            filter((x) => !!x),\n            map((x) => `JSESSIONID=${x}`)\n        );\n    }\n\n    private signInOnStart(): Observable<ICookie> {\n        return this.storageService.getStorage$().pipe(\n            switchMap((x) => {\n                const url = x[this.urlKey];\n                if (!url) return of(null);\n                return this.getJiraCredentials(url);\n            })\n        );\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { from, Observable } from 'rxjs';\n\n// @ts-ignore\nconst browser = chrome;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageService {\n    public getStorage$(): Observable<{}> {\n        return from(\n            new Promise((resolve) => browser.storage.local.get((storage) => resolve(storage)))\n        );\n    }\n\n    public getCookie$(details): Observable<ICookie> {\n        return from(\n            new Promise<ICookie>((resolve) =>\n                browser.cookies.get(details, (cookie) => resolve(cookie))\n            )\n        );\n    }\n\n    public setStorage$(items: {}): Observable<void> {\n        return from(\n            new Promise<void>((resolve) => browser.storage.local.set(items, () => resolve()))\n        );\n    }\n\n    public deleteStorage$(keys: string[]): Observable<void> {\n        return from(\n            new Promise<void>((resolve) => browser.storage.local.remove(keys, () => resolve()))\n        );\n    }\n}\n\nexport interface ICookie {\n    name: string;\n    value: string;\n}\n","import { Component, DoCheck, OnInit } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, startWith, tap } from 'rxjs/operators';\nimport { AuthService } from './services/auth/auth.service';\nimport { IIssueType } from './services/issue/issue.service';\nimport { IProjectInfo, ProjectService } from './services/project/project.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.sass'],\n})\nexport class AppComponent implements OnInit, DoCheck {\n    public vm$: Observable<VM>;\n    constructor(\n        private readonly authService: AuthService,\n        private readonly projectService: ProjectService\n    ) {}\n\n    public ngOnInit() {\n        this.vm$ = combineLatest([\n            this.authService.isSignedIn$.pipe(startWith(false)),\n            this.projectService.availableProjects$.pipe(startWith([])),\n            this.projectService.project$.pipe(startWith(null)),\n            this.authService.url$.pipe(startWith('')),\n            this.projectService.projectStatuses$.pipe(startWith([])),\n        ]).pipe(\n            map(([isSignedIn, projects, selectedProject, url, statuses]) => {\n                const vm = { isSignedIn, projects, selectedProject, url, statuses } as VM;\n                vm.flowState = this.getFlowState(vm);\n                return vm;\n            })\n        );\n    }\n\n    public ngDoCheck() {\n        console.log('change detection fired');\n    }\n\n    private getFlowState(vm: VM): FlowState {\n        if (!vm.isSignedIn) {\n            return FlowState.Login;\n        }\n        if (!vm.selectedProject) {\n            return FlowState.Project;\n        }\n        return FlowState.Issues;\n    }\n}\n\nenum FlowState {\n    Login = 'login',\n    Project = 'project',\n    Issues = 'issues',\n}\n\nexport interface VM {\n    isSignedIn: boolean;\n    projects: IProjectInfo[];\n    selectedProject: IProjectInfo;\n    url: string;\n    flowState: FlowState;\n    statuses: IIssueType[];\n}\n","<ng-container *ngIf=\"vm$ | async as vm\">\n    <app-header [vm]=\"vm\"></app-header>\n    <div [ngSwitch]=\"vm.flowState\" class=\"container\">\n        <app-login *ngSwitchCase=\"'login'\"></app-login>\n        <app-project-selection *ngSwitchCase=\"'project'\" [vm]=\"vm\"></app-project-selection>\n        <app-issues *ngSwitchCase=\"'issues'\" [vm]=\"vm\"></app-issues>\n    </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable, pipe } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.sass'],\n})\nexport class LoginComponent implements OnInit {\n    public loginForm: FormGroup;\n    constructor(private readonly authService: AuthService) {}\n\n    public get urlControl() {\n        return this.loginForm.get('url');\n    }\n\n    ngOnInit(): void {\n        this.loginForm = new FormGroup({\n            url: new FormControl('', { validators: [Validators.required] }),\n        });\n    }\n\n    public onSubmit(): void {\n        const url = this.urlControl.value;\n        this.authService.getJiraCredentials(url).pipe(take(1)).subscribe();\n    }\n}\n","<h1 class=\"my-2\">Enter your Jira server website</h1>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"form-group\">\n    <div class=\"d-flex justify-content-left\">\n        <input\n            name=\"jiraUrl\"\n            type=\"url\"\n            class=\"form-control mb-3 me-2\"\n            placeholder=\"https://jira.example.com\"\n            formControlName=\"url\"\n            autocomplete=\"url\"\n            [ngClass]=\"{ 'is-invalid': urlControl.touched && urlControl.invalid }\"\n            required\n        />\n        <button class=\"btn btn-primary mb-3\">Submit</button>\n    </div>\n</form>\n","import { Component, EventEmitter, Input, Output, TrackByFunction } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { VM } from '@app/app.component';\nimport { IProjectInfo, ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n    selector: 'app-project-selection',\n    templateUrl: './project-selection.component.html',\n    styleUrls: ['./project-selection.component.sass'],\n})\nexport class ProjectSelectionComponent {\n    @Input() vm: VM;\n    public projectForm: FormGroup;\n    public get projectControl() {\n        return this.projectForm.get('projectControl');\n    }\n    constructor(private readonly projectService: ProjectService) {}\n    ngOnInit(): void {\n        this.projectForm = new FormGroup({\n            projectControl: new FormControl(),\n        });\n    }\n\n    public trackByProjectId: TrackByFunction<IProjectInfo> = (idx, item) => {\n        return item.id;\n    };\n\n    public submit(event: any): void {\n        event.preventDefault();\n        this.projectService.setProject(this.projectControl.value);\n    }\n}\n","<form [formGroup]=\"projectForm\" (submit)=\"submit($event)\">\n    <h2>Please select a project to work in</h2>\n    <div class=\"form-check mb-2\" *ngFor=\"let project of vm.projects; trackBy: trackByProjectId\">\n        <input\n            formControlName=\"projectControl\"\n            class=\"form-check-input\"\n            type=\"radio\"\n            [value]=\"project\"\n        />\n        <label class=\"form-check-label\" [for]=\"project.name\"\n            >{{ project.name }} / {{ project.key }}</label\n        >\n    </div>\n    <button class=\"btn btn-primary mb-3\">Submit</button>\n</form>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ProjectSelectionComponent } from './components/project-selection/project-selection.component';\nimport { HttpRequestInterceptor } from './HttpAuthInterceptor';\nimport { IssuesComponent } from './components/issues/issues.component';\n\n@NgModule({\n    declarations: [AppComponent, HeaderComponent, LoginComponent, ProjectSelectionComponent, IssuesComponent],\n    imports: [BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule],\n    providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true }],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { VM } from '@app/app.component';\n\n@Component({\n    selector: 'app-issues',\n    templateUrl: './issues.component.html',\n    styleUrls: ['./issues.component.sass'],\n})\nexport class IssuesComponent {\n    @Input() vm: VM;\n    constructor() {}\n}\n","{{ vm.statuses | json }}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport { IIssueType } from '../issue/issue.service';\nimport { StorageService } from '../storage/storage.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProjectService {\n    private projectUrl$ = this.auth.url$.pipe(map((x) => x + 'rest/api/2/project'));\n    private projectBS: BehaviorSubject<IProjectInfo> = new BehaviorSubject(null);\n    private projectCookieKey = '6cbbfa32-e2f1-4694-861e-1edf3c9a1a2b';\n    public project$ = this.projectBS.asObservable();\n    public availableProjects$ = this.projectUrl$.pipe(\n        switchMap((x) => this.http.get<IProjectInfo[]>(x + '?recent=5'))\n    );\n    public projectStatuses$ = combineLatest([this.project$, this.projectUrl$]).pipe(\n        filter(([project, url]) => !!project?.key && !!url),\n        switchMap(([project, url]) => this.http.get<IIssueType[]>(`${url}/${project.key}/statuses`))\n    );\n\n    constructor(\n        private readonly http: HttpClient,\n        private readonly auth: AuthService,\n        private readonly storageService: StorageService\n    ) {\n        const jsonProject = this.storageService\n            .getStorage$()\n            .pipe(take(1))\n            .subscribe((storage) => {\n                const x = storage[this.projectCookieKey];\n                if (x) {\n                    this.projectBS.next(JSON.parse(x));\n                }\n            });\n    }\n\n    public setProject(project: IProjectInfo): Observable<void> {\n        this.projectBS.next(project);\n        return this.storageService.setStorage$({\n            [this.projectCookieKey]: JSON.stringify(project),\n        });\n    }\n\n    public deleteProject(): Observable<void> {\n        this.projectBS.next(null);\n        return this.storageService.deleteStorage$([this.projectCookieKey]);\n    }\n}\n\nexport interface IProjectInfo {\n    url: string;\n    id: number;\n    key: string;\n    name: string;\n}\n\nexport interface ISearchRequest {\n    jql: string;\n    startAt: number;\n    maxResults: number;\n    fields: string[];\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}